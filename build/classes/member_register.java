
import com.sun.java.swing.plaf.motif.MotifLookAndFeel;
import com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel;
import com.sun.java.swing.plaf.windows.WindowsLookAndFeel;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.plaf.nimbus.NimbusLookAndFeel;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author udesh
 */
public class member_register extends javax.swing.JFrame {

    /**
     * Creates new form member_register
     */
    public member_register() {
        initComponents();
         try {
            Image icone =Toolkit.getDefaultToolkit().getImage("C:\\Users\\udesh\\Pictures\\loicone.jpg");
            setIconImage(icone);
        } catch (Exception e) {
        }
        screensize();
        tableSetins();
         genareteMemberID();
         Loadmember();
         this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
       
        bu.setVisible(false);
          bdel.setVisible(false);
          $mi.setText("E");
         txtnic.grabFocus();
        
    }
    boolean  textInput=false;
    private void genareteMemberID() {
        try {
            ResultSet rs = db.serch("select count(member_id) as x from member_register");
            if(rs.next()){
                String counts = rs.getString("x");
                
                int count = Integer.parseInt(counts);
               ++count;
                if(count<10){
                txtmi.setText("E000"+count);
               // txtmi.setEditable(false);
                }else if(count<100){
                 txtmi.setText("E00"+count);
               // txtmi.setEditable(false);
                }else if(count<1000){
                    txtmi.setText("E0"+count);
                //txtmi.setEditable(false);
                }else if(count<10000){
                    txtmi.setText("E"+count);
               // txtmi.setEditable(false);
                }
                  txtnic.grabFocus();
            }
           
        } catch (Exception e) {
            System.out.println(e);
        }
    }


private void tableSetins(){
    jTable1.getTableHeader().setFont(new Font("Arial",Font.BOLD,15));
  jTable1 .getTableHeader().setOpaque(false);
    jTable1.getTableHeader().setBackground(Color.ORANGE);
    jTable1.getTableHeader().setForeground(Color.darkGray);
    jTable1.setRowHeight(50);
    jTable1.setFont(new Font ("Arial",Font.BOLD,13));
}
private void screensize() {
      
    this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        br = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jdob = new com.toedter.calendar.JDateChooser();
        txtna = new javax.swing.JTextField();
        bdel = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtad = new javax.swing.JTextField();
        txtfe = new javax.swing.JRadioButton();
        txtmi = new javax.swing.JTextField();
        txtnic = new javax.swing.JTextField();
        txtme = new javax.swing.JRadioButton();
        jButton5 = new javax.swing.JButton();
        bu = new javax.swing.JButton();
        txttn = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        $mi = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\udesh\\Pictures\\grass.jpg")); // NOI18N
        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1366, 768));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setBackground(new java.awt.Color(0, 0, 102));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 0));
        jLabel3.setText("     Member Register From");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, 630, 60));

        jLabel4.setBackground(new java.awt.Color(0, 204, 204));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Member id");
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 130, 30));

        jLabel5.setBackground(new java.awt.Color(0, 204, 204));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("NIC ");
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, 130, 30));

        jLabel8.setBackground(new java.awt.Color(0, 204, 204));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("DOB");
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, 130, 30));

        jButton4.setBackground(new java.awt.Color(153, 0, 153));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setText("Load Member Details");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 220, 230, 40));

        jLabel9.setBackground(new java.awt.Color(0, 204, 204));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Gender");
        jLabel9.setOpaque(true);
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 130, 30));

        jLabel10.setBackground(new java.awt.Color(0, 204, 204));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Adreess");
        jLabel10.setOpaque(true);
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 130, 30));

        br.setBackground(new java.awt.Color(255, 0, 204));
        br.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        br.setText("Register");
        br.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brActionPerformed(evt);
            }
        });
        getContentPane().add(br, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 220, 200, 40));

        jButton8.setBackground(new java.awt.Color(51, 153, 0));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton8.setForeground(new java.awt.Color(102, 0, 0));
        jButton8.setText(" Home");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 10, -1, -1));

        jdob.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jdobAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jdob.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jdobMousePressed(evt);
            }
        });
        getContentPane().add(jdob, new org.netbeans.lib.awtextra.AbsoluteConstraints(621, 150, 270, 30));

        txtna.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnaActionPerformed(evt);
            }
        });
        txtna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnaKeyTyped(evt);
            }
        });
        getContentPane().add(txtna, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 90, 290, 30));

        bdel.setBackground(new java.awt.Color(255, 0, 255));
        bdel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bdel.setText("Remove Member");
        bdel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdelActionPerformed(evt);
            }
        });
        getContentPane().add(bdel, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 620, 200, 40));

        jLabel7.setBackground(new java.awt.Color(0, 204, 204));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Tel Number");
        jLabel7.setOpaque(true);
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 150, 130, 30));

        txtad.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtadActionPerformed(evt);
            }
        });
        getContentPane().add(txtad, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 260, 30));

        txtfe.setBackground(new java.awt.Color(0, 255, 0));
        buttonGroup1.add(txtfe);
        txtfe.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtfe.setForeground(new java.awt.Color(153, 0, 0));
        txtfe.setText("Female");
        txtfe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfeActionPerformed(evt);
            }
        });
        getContentPane().add(txtfe, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 110, 30));

        txtmi.setEditable(false);
        txtmi.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtmi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmiActionPerformed(evt);
            }
        });
        getContentPane().add(txtmi, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 260, 30));

        txtnic.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtnic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnicActionPerformed(evt);
            }
        });
        txtnic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnicKeyTyped(evt);
            }
        });
        getContentPane().add(txtnic, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 90, 270, 30));

        txtme.setBackground(new java.awt.Color(0, 255, 0));
        buttonGroup1.add(txtme);
        txtme.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtme.setForeground(new java.awt.Color(153, 0, 0));
        txtme.setSelected(true);
        txtme.setText("Male");
        txtme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmeActionPerformed(evt);
            }
        });
        getContentPane().add(txtme, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 90, 30));

        jButton5.setBackground(new java.awt.Color(51, 51, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setText("Load By Member id");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 220, 210, 40));

        bu.setBackground(new java.awt.Color(51, 153, 0));
        bu.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bu.setText("Update");
        bu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buActionPerformed(evt);
            }
        });
        getContentPane().add(bu, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 620, 200, 40));

        txttn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttnActionPerformed(evt);
            }
        });
        txttn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txttnKeyTyped(evt);
            }
        });
        getContentPane().add(txttn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 150, 290, 30));

        jLabel6.setBackground(new java.awt.Color(0, 204, 204));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Name");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 90, 130, 30));

        $mi.setBackground(new java.awt.Color(51, 51, 255));
        $mi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        $mi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                $miActionPerformed(evt);
            }
        });
        $mi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                $miKeyTyped(evt);
            }
        });
        getContentPane().add($mi, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 270, 150, 30));

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member id", "NIC", "Name", "Gender", "DOB", "Tel", "Adress", "Register date"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 1140, 310));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\udesh\\Pictures\\s.jpg")); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jLabel1KeyReleased(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-50, -100, 1820, 900));

        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(144, 80, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
  boolean stop =false;
    private void txtmiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmiActionPerformed
        txtnic.grabFocus();
       
    }//GEN-LAST:event_txtmiActionPerformed

    private void txtnicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnicActionPerformed
       txtna.grabFocus();
    }//GEN-LAST:event_txtnicActionPerformed

    private void txtnaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnaActionPerformed
        txttn.grabFocus();
    }//GEN-LAST:event_txtnaActionPerformed

    private void txtmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmeActionPerformed
        
    }//GEN-LAST:event_txtmeActionPerformed

    private void $miActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_$miActionPerformed
        
    }//GEN-LAST:event_$miActionPerformed

    private void bdelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdelActionPerformed
      try {
         
          
          
        db.iud("update member_register set stat='"+"0"+"' where member_id='"+txtmi.getText()+"'");
          JOptionPane.showMessageDialog(this, " "+ txtmi.getText()+" Member is deleat");

        } catch (Exception e) {
            e.printStackTrace();
        }
             txtmi.setText(null);
           txtnic.setText(null);
           txtna.setText(null);
           txtme.setSelected(true);
           jdob.setDate(null);
           txttn.setText(null);
           txtad.setText(null);
           
           genareteMemberID();
           bdel.setVisible(false);
         
        
    }//GEN-LAST:event_bdelActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        try {
     ResultSet rs = db.serch("select * from member_register where member_id='"+$mi.getText()+"'");
            stop=true;
            //bc.setVisible(true);
            //bu.setVisible(true);
         DefaultTableModel dtm =(DefaultTableModel)jTable1.getModel();
         dtm.setRowCount(0);
         while(rs.next()){
         Vector v =new Vector ();
         v.add(rs.getString("member_id"));
         v.add(rs.getString("nic"));
          v.add(rs.getString("name"));
           v.add(rs.getString("gender"));
            v.add(rs.getString("dob"));
            v.add(rs.getString("tel"));
            v.add(rs.getString("address"));
             v.add(rs.getString("register_date"));
            dtm.addRow(v);
                
         }
         $mi.setText(null);
        } catch (Exception e) {
            e.printStackTrace();
        }
         
    }//GEN-LAST:event_jButton5ActionPerformed

    private void brActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brActionPerformed
           try {
               Testtxt();
               if(textInput){
             String member_id= txtmi.getText().toUpperCase();
             String nic= txtnic.getText().toUpperCase();
            String name= txtna.getText().toUpperCase();
            String gender;
           if(txtme.isSelected()){
           gender="MALE";
           }else{
           gender="FEMALE";
           }

            Date dob= jdob.getDate();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
      

            String tel =txttn.getText().toUpperCase();
            String address =txtad.getText().toUpperCase();
           String register_date = new SimpleDateFormat("yyyy-MM-dd ").format(new Date());
            db.iud("insert into member_register values('"+member_id+"','"+nic+"','"+name+"','"+gender+"','"+sdf.format(dob)+"','"+tel+"','"+address+"','"+register_date+"','"+1+"')");
              textInput=true;
            txtmi.setText(null);
           txtnic.setText(null);
           txtna.setText(null);
           txtme.setSelected(true);
           jdob.setDate(null);
           txttn.setText(null);
           txtad.setText(null);
             genareteMemberID();
             
             
            JOptionPane.showMessageDialog(this,""+txtmi.getText()+"Member is register");
              
      
      ResultSet rs = db.serch("select * from member_register");
         DefaultTableModel dtm =(DefaultTableModel)jTable1.getModel();
         dtm.setRowCount(0);
         while(rs.next()){
         Vector v =new Vector ();
         v.add(rs.getString("member_id"));
         v.add(rs.getString("nic"));
          v.add(rs.getString("name"));
           v.add(rs.getString("gender"));
            v.add(rs.getString("dob"));
            v.add(rs.getString("tel"));
            v.add(rs.getString("address"));
             v.add(rs.getString("register_date"));
            dtm.addRow(v);
         
         
         }
               }
        
        }catch (NullPointerException n){
          JOptionPane.showMessageDialog(this, "Please  Fill Text Files");
        
        }catch(Exception e){
                e.printStackTrace();
        }
          
           
         
           
    }//GEN-LAST:event_brActionPerformed

    private void txttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttnActionPerformed
       txtad.grabFocus();
    }//GEN-LAST:event_txttnActionPerformed

    private void txtadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtadActionPerformed
       
    }//GEN-LAST:event_txtadActionPerformed

    private void jdobAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jdobAncestorAdded
        txttn.grabFocus();
    }//GEN-LAST:event_jdobAncestorAdded

    private void txtfeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfeActionPerformed
       jdob.grabFocus();
    }//GEN-LAST:event_txtfeActionPerformed

    private void buActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buActionPerformed
               try {
                   stop=false;
                
                   
                   
                  
             String member_id= txtmi.getText().toUpperCase();
             String nic= txtnic.getText().toUpperCase();
            String name= txtna.getText().toUpperCase();
            String gender;
           if(txtme.isSelected()){
           gender="MALE";
           }else{
           gender="FEMALE";
           }
             Date dob= jdob.getDate();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
  

            String tel =txttn.getText().toUpperCase();
            String address =txtad.getText().toUpperCase();
           String register_date = new SimpleDateFormat("yyyy-MM-dd ").format(new Date());
           
            db.iud("update member_register set member_id='"+member_id+"',nic='"+nic+"',name='"+name+"',gender='"+gender+"',dob='"+sdf.format(dob)+"',tel='"+tel+"',address='"+address+"',register_date='"+register_date+"' where member_id='"+txtmi.getText()+"'");
            JOptionPane.showMessageDialog(this, ""+txtmi.getText()+" IS Successfully update!!");
            
            
             try {
            ResultSet rs = db.serch("select * from member_register");
            DefaultTableModel dtm =(DefaultTableModel)jTable1.getModel();
            dtm.setRowCount(0);
            while(rs.next()){
                Vector v =new Vector ();
                v.add(rs.getString("member_id"));
         v.add(rs.getString("nic"));
          v.add(rs.getString("name"));
           v.add(rs.getString("gender"));
            v.add(rs.getString("dob"));
            v.add(rs.getString("tel"));
            v.add(rs.getString("address"));
             v.add(rs.getString("register_date"));
                dtm.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
              txtmi.setText(null);
           txtnic.setText(null);
           txtna.setText(null);
           txtme.setSelected(true);
           jdob.setDate(null);
           txttn.setText(null);
           txtad.setText(null);
           
           genareteMemberID();
         
           bu.setVisible(false);
         
       
    }//GEN-LAST:event_buActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        new mainmenu().setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        try {
            ResultSet rs = db.serch("select * from member_register where stat =1");
            DefaultTableModel dtm =(DefaultTableModel)jTable1.getModel();
            dtm.setRowCount(0);
            while(rs.next()){
                Vector v =new Vector ();
                v.add(rs.getString("member_id"));
         v.add(rs.getString("nic"));
          v.add(rs.getString("name"));
           v.add(rs.getString("gender"));
            v.add(rs.getString("dob"));
            v.add(rs.getString("tel"));
            v.add(rs.getString("address"));
             v.add(rs.getString("register_date"));
                dtm.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
          
        try{
            
              if(stop){
            
              bu.setVisible(true);
              bdel.setVisible(true);
        DefaultTableModel df =(DefaultTableModel)jTable1.getModel();
       Vector v = new Vector();
       for(int x = 0;x<jTable1.getColumnCount();x++){
       String s = df.getValueAt(jTable1.getSelectedRow(), x).toString();
       v.add(s);
       }
       
      txtmi.setText(v.get(0).toString());
      txtnic.setText(v.get(1).toString());
      txtna.setText(v.get(2).toString());
      if(v.get(3).toString().equals("MALE")){
         txtme.setSelected(true);
      }
      else{
         txtfe.setSelected(true);
      }
      String dob =v.get(4).toString();
               System.out.println(dob);
      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
      Date date =sdf.parse(dob);
      jdob.setDate(date);
               
      txttn.setText(v.get(5).toString());
      txtad.setText(v.get(6).toString()); 
              }
       }catch(Exception e){}
        
    }//GEN-LAST:event_jTable1MousePressed

    private void txtnicKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnicKeyTyped
        if(txtnic.getText().length()==12){
          evt.consume();
       }
    }//GEN-LAST:event_txtnicKeyTyped

    private void jLabel1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel1KeyReleased
       
    }//GEN-LAST:event_jLabel1KeyReleased

    private void txtnaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnaKeyTyped
              char keychar =evt.getKeyChar();
        boolean isDigit = Character.isDigit(keychar);
        if(isDigit){
        evt.consume();
       // JOptionPane.showMessageDialog(this, "Sorry your enter intiger type");
        }else{
         
        }
    }//GEN-LAST:event_txtnaKeyTyped

    private void txttnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttnKeyTyped
         if(txttn.getText().length()==10){
          evt.consume();
         }
        
        if(!Character.isDigit(evt.getKeyChar())){
        evt.consume();
               // JOptionPane.showMessageDialog(this, "Sorry your enter string type");
        }
    }//GEN-LAST:event_txttnKeyTyped

    private void jdobMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdobMousePressed
       
    }//GEN-LAST:event_jdobMousePressed

    private void $miKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_$miKeyTyped
         if($mi.getText().length()==7){
        evt.consume();
      }
       if($mi.getText().toUpperCase().contains("E")){
           char keyChar = evt.getKeyChar();
        boolean isDigit = Character.isDigit(keyChar);
        if(!isDigit){
        evt.consume();
        }
      }
    }//GEN-LAST:event_$miKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
            try {
          UIManager.setLookAndFeel(new WindowsClassicLookAndFeel());
        } catch (Exception e) {
        }
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(member_register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(member_register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(member_register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(member_register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new member_register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField $mi;
    private javax.swing.JButton bdel;
    private javax.swing.JButton br;
    private javax.swing.JButton bu;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.toedter.calendar.JDateChooser jdob;
    private javax.swing.JTextField txtad;
    private javax.swing.JRadioButton txtfe;
    private javax.swing.JRadioButton txtme;
    private javax.swing.JTextField txtmi;
    private javax.swing.JTextField txtna;
    private javax.swing.JTextField txtnic;
    private javax.swing.JTextField txttn;
    // End of variables declaration//GEN-END:variables

    private void Loadmember() {
          try {
            ResultSet rs = db.serch("select * from member_register where stat =1");
            DefaultTableModel dtm =(DefaultTableModel)jTable1.getModel();
            dtm.setRowCount(0);
            while(rs.next()){
                Vector v =new Vector ();
                v.add(rs.getString("member_id"));
                v.add(rs.getString("nic"));
                v.add(rs.getString("name"));
                v.add(rs.getString("gender"));
                v.add(rs.getString("dob"));
                v.add(rs.getString("tel"));
                v.add(rs.getString("address"));
                v.add(rs.getString("register_date"));
                dtm.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void Testtxt() {   
    if(!txtnic.getText().trim().equals("")){
        if(!txtna.getText().trim().equals("")){
            if(!txttn.getText().trim().equals("")){
                if(!txtad.getText().trim().equals("")){
                    textInput=true;
                }else{
                 JOptionPane.showMessageDialog(this,"Please Enter your Address", "Address", 2);
                 textInput=false;
                }
            }else{
             JOptionPane.showMessageDialog(this,"Please Enter your Tel Number", "Phone Number", 2);
               textInput=false;
            }
        }else{
             JOptionPane.showMessageDialog(this,"Please Enter your Name", " Name", 2);
           textInput=false;
        }
    }else{
         JOptionPane.showMessageDialog(this,"Please Enter your NIC Number", "NIC", 2);
       textInput=false;
    }
}
    
}
